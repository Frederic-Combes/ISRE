#ifndef DATABASE_H
#define DATABASE_H

namespace Strings {

namespace Database {

namespace Description {

constexpr const char * Id       = "id";
constexpr const char * Name     = "name";
constexpr const char * Value    = "value";

constexpr const char * Dimension              = "Dimension";
constexpr const char * Duration               = "Duration";
constexpr const char * NumberOfTimesteps      = "Number of timesteps";
constexpr const char * NumberOfSavedPoints    = "Number of saved points";
constexpr const char * NumberOfEnergySamples  = "Number of energy samples";
constexpr const char * SimulationIncomplete   = "Simulation incomplete";
constexpr const char * MainSimulationID       = "Main simulation ID";
constexpr const char * EnergyBinMinimum       = "Energy bin minimum";
constexpr const char * EnergyBinMaximum       = "Energy bin maximum";
constexpr const char * FromScript             = "Generated by the script";

} // namespace DescriptionString

namespace Result {

constexpr const char * Id               = "id";
constexpr const char * Time             = "time";
constexpr const char * SX               = "s_x";
constexpr const char * SY               = "s_y";
constexpr const char * SZ               = "s_z";
constexpr const char * Constrast        = "contrast";
constexpr const char * Phase            = "phase";
constexpr const char * AtomLossFromF1   = "lost_1";
constexpr const char * AtomLossFromF2   = "lost_2";

} // Namespace Result

} // namespace Database

namespace JIT {

namespace Variables {

constexpr const char * Timestep     = "timestep";
constexpr const char * Time         = "time";
constexpr const char * EnergyIndex  = "energyIndex";
constexpr const char * Energy       = "energy";
constexpr const char * Duration     = "duration";

} // namespace Variables

namespace Functions {

constexpr const char * Frequency        = "frequency";
constexpr const char * Exchange         = "exchange";
constexpr const char * Damping          = "damping";

constexpr const char * AtomLossFromF1   = "atomLossFromF1";
constexpr const char * AtomLossFromF2   = "atomLossFromF2";

constexpr const char * InitialSpinX     = "initialSpinX";
constexpr const char * InitialSpinY     = "initialSpinY";
constexpr const char * InitialSpinZ     = "initialSpinZ";

constexpr const char * DefaultDensity   = "DefaultDensityEnergyDependence";

} // namespace Functions

} // namespace JIT

namespace Script {

namespace Settings {

constexpr const char * Dimension        = "dimension";
constexpr const char * Duration         = "duration";
constexpr const char * Timesteps        = "timesteps";
constexpr const char * SaveInterval     = "saveInterval";
constexpr const char * EnergySamples    = "energySamples";
constexpr const char * EnergyBins       = "energyBins";

} // namespace Settings

namespace Simulation {

constexpr const char * Frequency        = "frequency";
constexpr const char * Exchange         = "exchange";
constexpr const char * Damping          = "damping";
constexpr const char * AtomLoss         = "atomLoss";
constexpr const char * InitialSpin      = "initialSpin";
constexpr const char * Operations       = "operations";
constexpr const char * Name             = "name";
constexpr const char * Settings         = "settings";
constexpr const char * Parameters       = "parameters";
constexpr const char * Functions        = "functions";
constexpr const char * Run              = "run";

} // namespace Simulation

namespace AtomLoss {

constexpr const char * FromF1   = "fromF1";
constexpr const char * FromF2   = "fromF2";

} // namespace AtomLoss

namespace Operation {

constexpr const char * Time        = "time";
constexpr const char * IsFixedTime = "isFixedTime";
constexpr const char * Operator    = "operator";

} // namespace Operation

namespace Parameter {

constexpr const char * Name = "name";
constexpr const char * Values = "values";

}

namespace Function {

constexpr const char * Name = "name";
constexpr const char * Code = "code";

}

namespace Table {

} // Namespace Table

} // namespace Script

} // namespace Strings

#endif // DATABASE_H
